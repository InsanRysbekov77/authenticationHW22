{"ast":null,"code":"var _jsxFileName = \"/Users/kubansadyrov/Desktop/01-react-autentication/src/store/authcontext.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const authContext = /*#__PURE__*/React.createContext({\n  // email: '',\n  password: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [token, setToken] = useState(null);\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = token => {\n    setToken(token);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoge: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"e+LEOB8XbRIRiSUQHKM4ToWFki4=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/kubansadyrov/Desktop/01-react-autentication/src/store/authcontext.js"],"names":["React","useState","authContext","createContext","password","isLoggedIn","login","token","logout","AuthContextProvider","props","setToken","userIsLoggedIn","loginHandler","logoutHandler","contextValue","isLoge","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AAC9C;AACAC,EAAAA,QAAQ,EAAE,EAFoC;AAG9CC,EAAAA,UAAU,EAAE,KAHkC;AAI9CC,EAAAA,KAAK,EAAGC,KAAD,IAAW,CAAE,CAJ0B;AAK9CC,EAAAA,MAAM,EAAE,MAAM,CAAE;AAL8B,CAApB,CAApB;AAQP,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC7C,QAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMW,cAAc,GAAG,CAAC,CAACL,KAAzB;;AAEA,QAAMM,YAAY,GAAIN,KAAD,IAAW;AAC/BI,IAAAA,QAAQ,CAACJ,KAAD,CAAR;AACA,GAFD;;AAGA,QAAMO,aAAa,GAAG,MAAM;AAC3BH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,GAFD;;AAGA,QAAMI,YAAY,GAAG;AACpBR,IAAAA,KAAK,EAAEA,KADa;AAEpBS,IAAAA,MAAM,EAAEJ,cAFY;AAGpBN,IAAAA,KAAK,EAAEO,YAHa;AAIpBL,IAAAA,MAAM,EAAEM;AAJY,GAArB;AAMG,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,YAA7B;AAAA,cACKL,KAAK,CAACO;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtBM;;GAAMR,mB;;KAAAA,mB","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\n\nexport const authContext = React.createContext({\n\t// email: '',\n\tpassword: '',\n\tisLoggedIn: false,\n\tlogin: (token) => {},\n\tlogout: () => {},\n})\n\nexport const AuthContextProvider = (props) => {\n\tconst [token, setToken] = useState(null)\n\n\tconst userIsLoggedIn = !!token\n\n\tconst loginHandler = (token) => {\n\t\tsetToken(token)\n\t}\n\tconst logoutHandler = () => {\n\t\tsetToken(null)\n\t}\n\tconst contextValue = {\n\t\ttoken: token,\n\t\tisLoge: userIsLoggedIn,\n\t\tlogin: loginHandler,\n\t\tlogout: logoutHandler,\n\t}\n    return (\n        <authContext.Provider value={contextValue}>\n            {props.children}\n        </authContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}