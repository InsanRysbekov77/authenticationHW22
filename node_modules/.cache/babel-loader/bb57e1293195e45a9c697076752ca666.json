{"ast":null,"code":"var _jsxFileName = \"/Users/kubansadyrov/Desktop/01-react-autentication/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport { SECRET_KEY } from '../../utils/constants/general';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLodaing, setIsLoading] = useState(false);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; //Todo add validarion\n\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${SECRET_KEY}`;\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.ok) {\n          setIsLoading(true);\n          response.json().then(auth => {\n            if (auth.registered) {}\n          });\n        }\n      });\n    } else {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${SECRET_KEY}`;\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true //Нам нужуен token и token кайтар дейбиз\n\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        setIsLoading(false);\n\n        if (response.ok) {\n          return response.json();\n        } else {\n          response.json().then(data => {\n            let errorMessage = 'Authrntication failed';\n\n            if (data && data.error && data.eror.message) {\n              errorMessage = data.error.message;\n            }\n\n            throw new Error(errorMessage);\n          });\n        }\n      }).then(data => {\n        console.log(data);\n      }).catch(err => {\n        alert(err.message);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: emailInputRef,\n          type: \"email\",\n          id: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: passwordInputRef,\n          type: \"password\",\n          id: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLodaing && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this), isLodaing && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AuthForm, \"WcnCMwttXpNxA2KUvkYyGzJ8un8=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/Users/kubansadyrov/Desktop/01-react-autentication/src/components/Auth/AuthForm.js"],"names":["useState","useRef","SECRET_KEY","classes","AuthForm","isLogin","setIsLogin","isLodaing","setIsLoading","emailInputRef","passwordInputRef","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","response","ok","json","auth","registered","data","errorMessage","error","eror","message","Error","console","log","catch","err","alert","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { useRef } from 'react'\nimport { SECRET_KEY } from '../../utils/constants/general'\n\nimport classes from './AuthForm.module.css'\n\nconst AuthForm = () => {\n\tconst [isLogin, setIsLogin] = useState(true)\n\tconst [isLodaing, setIsLoading] = useState(false)\n\tconst emailInputRef = useRef()\n\tconst passwordInputRef = useRef()\n\n\tconst switchAuthModeHandler = () => {\n\t\tsetIsLogin((prevState) => !prevState)\n\t}\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault()\n\n\t\tconst enteredEmail = emailInputRef.current.value\n\t\tconst enteredPassword = passwordInputRef.current.value\n\n\t\t//Todo add validarion\n\t\tsetIsLoading(true)\n\t\tlet url\n\t\tif (isLogin) {\n\t\t\turl = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${SECRET_KEY}`\n\t\t\tfetch(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\temail: enteredEmail,\n\t\t\t\t\tpassword: enteredPassword,\n\t\t\t\t\treturnSecureToken: true,\n\t\t\t\t}),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t}).then((response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tsetIsLoading(true)\n\t\t\t\t\tresponse.json().then((auth) => {\n            if(auth.registered) {\n              \n            }\n          })\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\turl = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${SECRET_KEY}`\n\t\t\tfetch(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\temail: enteredEmail,\n\t\t\t\t\tpassword: enteredPassword,\n\t\t\t\t\treturnSecureToken: true, //Нам нужуен token и token кайтар дейбиз\n\t\t\t\t}),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\treturn response.json()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresponse.json().then((data) => {\n\t\t\t\t\t\t\tlet errorMessage = 'Authrntication failed'\n\t\t\t\t\t\t\tif (data && data.error && data.eror.message) {\n\t\t\t\t\t\t\t\terrorMessage = data.error.message\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthrow new Error(errorMessage)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then((data) => {\n\t\t\t\t\tconsole.log(data)\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\talert(err.message)\n\t\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<section className={classes.auth}>\n\t\t\t<h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor='email'>Your Email</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tref={emailInputRef}\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tid='email'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor='password'>Your Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tref={passwordInputRef}\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tid='password'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t{!isLodaing && (\n\t\t\t\t\t\t<button>{isLogin ? 'Login' : 'Create Account'}</button>\n\t\t\t\t\t)}\n\t\t\t\t\t{isLodaing && <p>Sending request...</p>}\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tclassName={classes.toggle}\n\t\t\t\t\t\tonClick={switchAuthModeHandler}\n\t\t\t\t\t>\n\t\t\t\t\t\t{isLogin\n\t\t\t\t\t\t\t? 'Create new account'\n\t\t\t\t\t\t\t: 'Login with existing account'}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</section>\n\t)\n}\n\nexport default AuthForm\n"]},"metadata":{},"sourceType":"module"}