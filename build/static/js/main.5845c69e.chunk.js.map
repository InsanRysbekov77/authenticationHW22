{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/authContext.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","utils/constants/general.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","authContext","React","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","useState","setToken","useEffect","initialToken","localStorage","getItem","contextValue","setItem","removeItem","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","SECRET_KEY","ProfileForm","history","useHistory","newPasswordInputRef","useRef","form","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","response","ok","replace","catch","error","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","auth","url","enteredEmail","enteredPassword","email","json","data","errorMessage","message","Error","console","log","alert","err","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5845c69e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__2xGgc\",\"control\":\"ProfileForm_control__2YUZH\",\"action\":\"ProfileForm_action__opJ_6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2lqQ1\",\"logo\":\"MainNavigation_logo__1TgMx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__gQOnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__kwCvL\"};","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nexport const authContext = React.createContext({\n  //   email: '',\n  token: '',\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const [token, setToken] = useState(null);\n\n  useEffect(() => {\n    const initialToken = localStorage.getItem('@token-onine-store');\n    setToken(initialToken);\n  }, []);\n\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = (token) => {\n    setToken(token);\n    localStorage.setItem('@token-onine-store', token);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('@token-onine-store');\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return <authContext.Provider value={contextValue}>{props.children}</authContext.Provider>;\n};\n","import { Link } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { authContext } from '../../store/authContext';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  const authCtx = useContext(authContext);\n\n  const isLoggedIn = authCtx.isLoggedIn;\n\n  const logoutHandler = () => {\n    authCtx.logout();\n  };\n\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to=\"/auth\">Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/profile\">Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","export const SECRET_KEY = 'AIzaSyA-LiU6jxQORZwMni-28nx4zHb9pzX4jkU'","import { useRef } from 'react';\nimport { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { authContext } from '../../store/authContext';\nimport { SECRET_KEY } from '../../utils/constants/general';\n\nimport classes from './ProfileForm.module.css';\n\nconst ProfileForm = () => {\n  const history = useHistory();\n  const authCtx = useContext(authContext);\n  const newPasswordInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    fetch(`https://identitytoolkit.googleapis.com/v1/accounts:update?key=${SECRET_KEY}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        idToken: authCtx.token,\n        password: enteredNewPassword,\n        returnSecureToken: false,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          history.replace('/');\n        }\n      })\n      .catch((error) => {});\n  };\n  \n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input type=\"password\" id=\"new-password\" minLength={7} ref={newPasswordInputRef} />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from 'react';\nimport { SECRET_KEY } from '../../utils/constants/general';\nimport { authContext } from '../../store/authContext';\n\nimport classes from './AuthForm.module.css';\nimport { useHistory } from 'react-router-dom';\n\nconst AuthForm = () => {\n  const history = useHistory()\n  const authCtx = useContext(authContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    //TODO add validation\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${SECRET_KEY}`;\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n           password: enteredPassword,\n           returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type' : 'application/json',\n        },\n      }).then((response) => {\n        if(response.ok) {\n          setIsLoading(true)\n          return response.json()\n        }else{\n          response.json.then((data) => {\n            let errorMessage = 'Login failed'\n            if(data && data.error && data.error.errorMessage){\n              errorMessage = data.error.message\n            }\n            throw new Error(errorMessage)\n          })\n        }\n      }).then((data) => {\n        console.log(data);\n        authCtx.login(data.idToken)\n        history.replace('/')\n      }).catch((error) => alert(error.message))\n    } else {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${SECRET_KEY}`;\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true,\n        }),\n        headers: {\n          'Content-Type' : 'application/json',\n        },\n      })\n        .then((response) => {\n          setIsLoading(false);\n          if (response.ok) {\n            return response.json();\n          } else {\n            response.json().then((data) => {\n              let errorMessage = 'Authentication failed';\n              if (data && data.error && data.error.message) {\n                errorMessage = data.error.message;\n              }\n              throw new Error(errorMessage);\n            });\n          }\n        })\n        .then((data) => {\n          console.log(data);\n          authCtx.login(data.idToken)\n          history.replace('/')\n        })\n        .catch((err) => {\n          alert(err.message);\n        });\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input ref={emailInputRef} type=\"email\" id=\"email\" required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input ref={passwordInputRef} type=\"password\" id=\"password\" required />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n          {isLoading && <p>Sending request...</p>}\n          <button type=\"button\" className={classes.toggle} onClick={switchAuthModeHandler}>\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { Switch, Route } from 'react-router-dom'\nimport { useContext } from 'react'\nimport Layout from './components/Layout/Layout'\nimport UserProfile from './components/Profile/UserProfile'\nimport AuthPage from './pages/AuthPage'\nimport HomePage from './pages/HomePage'\nimport { authContext } from './store/authContext'\nimport { Redirect } from 'react-router-dom'\n\nfunction App() {\n\tconst authCtx = useContext(authContext)\n\treturn (\n\t\t<Layout>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/' exact>\n\t\t\t\t\t<HomePage />\n\t\t\t\t</Route>\n\t\t\t\t{!authCtx.isLoggedIn && (\n\t\t\t\t\t<Route path='/auth'>\n\t\t\t\t\t\t<AuthPage />\n\t\t\t\t\t</Route>\n\t\t\t\t)}\n\t\t\t\t{authCtx.isLoggedIn && (\n\t\t\t\t\t<Route path='/profile'>\n\t\t\t\t\t\t<UserProfile />\n\t\t\t\t\t</Route>\n\t\t\t\t)}\n\t\t\t\t<Route path='*'>\n\t\t\t\t\t<Redirect to='/' />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Layout>\n\t)\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { AuthContextProvider } from './store/authContext'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t\t<AuthContextProvider>\n\t\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t </BrowserRouter>\n\t\t</AuthContextProvider>,\n\tdocument.getElementById('root'),\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__MPw6W\",\"control\":\"AuthForm_control__2fVSU\",\"actions\":\"AuthForm_actions__1VNhY\",\"toggle\":\"AuthForm_toggle__21tnB\"};"],"sourceRoot":""}